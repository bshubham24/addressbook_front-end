[{"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\index.js":"1","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\App.js":"2","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\reportWebVitals.js":"3","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\components\\person-form\\person-form.jsx":"4","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\services\\addressbook-service.js":"5","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\configuration\\configuration.js":"6","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\services\\axios-service.js":"7","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\components\\home\\home.jsx":"8","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\components\\display\\display.jsx":"9"},{"size":222,"mtime":1608783582012,"results":"10","hashOfConfig":"11"},{"size":706,"mtime":1608901943178,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":8601,"mtime":1608896361851,"results":"14","hashOfConfig":"11"},{"size":726,"mtime":1608902044775,"results":"15","hashOfConfig":"11"},{"size":69,"mtime":1608891369273,"results":"16","hashOfConfig":"11"},{"size":728,"mtime":1608878387562,"results":"17","hashOfConfig":"11"},{"size":2145,"mtime":1608898069983,"results":"18","hashOfConfig":"11"},{"size":2075,"mtime":1608902036464,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1d8dwtu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\index.js",[],["41","42"],"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\App.js",[],"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\reportWebVitals.js",[],"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\components\\person-form\\person-form.jsx",["43","44"],"import React, { useState, useEffect } from 'react';\r\nimport './person-form.scss';\r\nimport logo from '../../assets/icons/logo.png'\r\nimport cancelIcon from '../../assets/icons/cancel3.png'\r\nimport AddressBookService from \"../../services/addressbook-service\";\r\nimport { useParams, Link, withRouter,} from 'react-router-dom';\r\n\r\nconst PersonForm = (props) => {\r\n    let initialValue = {\r\n        fullName: '',\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        phoneNo: '',\r\n        isUpdate: false,\r\n        error: {\r\n        fullName: '',\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        phoneNo: ''\r\n        }\r\n    }\r\n    const [formValue, setForm] = useState(initialValue);\r\n\r\n  const addressBookService = new AddressBookService();\r\n\r\n    const params = useParams();\r\n    useEffect(() => {\r\n        \r\n        if (params.id) {\r\n          getDataById(params.id);\r\n        }\r\n      }, []);\r\n\r\n      const getDataById = (id) => {\r\n        addressBookService\r\n          .getPerson(id)\r\n          .then((response) => {\r\n            console.log(\"data is \", response.data.data);\r\n            let obj = response.data.data;\r\n            setData(obj);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err is \", err);\r\n          });\r\n      };\r\n\r\n    const setData = (obj) => {\r\n        setForm({\r\n          ...formValue,\r\n          ...obj,\r\n          id: obj.id,\r\n          isUpdate: true,\r\n        });\r\n      };\r\n\r\n    const changeValue = (event) => {\r\n        setForm({ ...formValue, [event.target.name]: event.target.value })\r\n        console.log(event.target.value)\r\n    }\r\n\r\n\r\n    const handleValidations = async () => {\r\n        let isError = false;\r\n        let error = {\r\n            fullName: '',\r\n            address: '',\r\n            city: '',\r\n            state: '',\r\n            zip: '',\r\n            phoneNo: '',\r\n        }\r\n        if (!formValue.fullName.match('^[A-Z]{1}[a-zA-Z]{2,}')) {\r\n            error.fullName = 'Name is Invalid!!'\r\n            isError = true;\r\n        }\r\n        if (!formValue.city.match(\"^[A-Z]{1}[a-zA-Z]{2,}\")) {\r\n            error.city = 'City is Invalid!!'\r\n            isError = true;\r\n        }\r\n        if (!formValue.state.match(\"^[A-Z]{1}[a-zA-Z]+\")) {\r\n            error.state = 'State is Invalid!!'\r\n            isError = true;\r\n        }\r\n        if (formValue.address.length < 1) {\r\n            error.address = 'Address is Invalid!!'\r\n            isError = true;\r\n        }\r\n        if (!formValue.zip.match(\"^[1-9]{1}[0-9]{5}\")) {\r\n            error.zip = 'Zip Code is Invalid!!'\r\n            isError = true;\r\n        }\r\n        if (!formValue.phoneNo.match(\"[0-9]{2}[\\\\s][7-9]{1}[0-9]{9}\")) {\r\n            error.phoneNo = 'phoneNo is Invalid!!'\r\n            isError = true;\r\n        }\r\n       \r\n    \r\n        \r\n        await setForm({ ...formValue, error: error })\r\n        return isError;\r\n\r\n    }\r\n    const save = async (event) => {\r\n        event.preventDefault();\r\n        if(await handleValidations()){\r\n            console.log(\"error\", formValue);\r\n            return;\r\n        }else{\r\n        let object = {\r\n          fullName: formValue.fullName,\r\n          address: formValue.address,\r\n          city: formValue.city,\r\n          state: formValue.state,\r\n          zip: formValue.zip,\r\n          id: formValue.id,\r\n          phoneNo: formValue.phoneNo\r\n        };\r\n        if (formValue.isUpdate) {\r\n            addressBookService\r\n              .updatePerson(formValue.id,object)\r\n              .then((response) => {\r\n                alert(\"Contact updated successfully!\");\r\n                console.log(\"contact after update\", response.data.data);\r\n                props.history.push(\"\");\r\n              })\r\n              .catch((error) => {\r\n                alert(\"WARNING!! Error updating the data!\");\r\n                console.log(\"Error after update\"+error);\r\n              });\r\n          } else {\r\n            addressBookService\r\n              .addPerson(object)\r\n              .then((data) => {\r\n                  console.log(data)\r\n                  alert(\"Contact Added successfully!!\")\r\n                console.log(\"Data added\");\r\n                props.history.push(\"\");\r\n              })\r\n              .catch((err) => {\r\n                  console.log(err)\r\n                  alert(\"WARNING!! Error while adding the data!\");\r\n                console.log(\"some error occured while adding\");\r\n              });\r\n          }\r\n        };\r\n    }\r\n    const reset = () => {\r\n        setForm({ ...initialValue, id: formValue.id, isUpdate: formValue.isUpdate });\r\n\r\n        console.log(formValue);\r\n    }\r\n    const cancel =() =>{\r\n        props.history.push(\"\");\r\n    }\r\n    return (\r\n        <div className=\"addressbook-main\">\r\n            <header className='header'>\r\n                <div className=\"logo\">\r\n                <img src={logo} alt=\"\" width=\"40px\" />\r\n                    <div>\r\n                        <span className=\"emp-text\">Address</span> <br />\r\n                        <span className=\"emp-text emp-payroll\">Book</span>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <div className=\"content\">\r\n                <form className=\"form\" action=\"#\" onSubmit={save}>\r\n                    <div className=\"form-head \">\r\n                    <span className=\"form-description\">PERSON ADDRESS FORM</span>\r\n                        <img className=\"cancel-icon\" src={cancelIcon} onClick={cancel} alt=\"\" width=\"3%\"/>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <label className=\"label text\" htmlFor=\"fullName\">Full Name</label>\r\n                        <input className=\"input\" type=\"text\" id=\"fullName\" name=\"fullName\" value={formValue.fullName} onChange={changeValue} placeholder=\"Your firstname..\" />\r\n                    <error className=\"error\">{formValue.error.fullName}</error>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <label className=\"label text\" htmlFor=\"phoneNo\">Phone Number</label>\r\n                        <input className=\"input\" type=\"text\" id=\"phoneNo\" name=\"phoneNo\" value={formValue.phoneNo} onChange={changeValue} />\r\n                        <error className=\"error\">{formValue.error.phoneNo}</error>\r\n                    </div>\r\n\r\n                    <div className=\"column\">\r\n                        <label className=\"label text\" htmlFor=\"address\">Address</label>\r\n                        <textarea onChange={changeValue} id=\"address\" value={formValue.address} className=\"input\" name=\"address\" placeholder=\"\"\r\n                            style={{ height: '120%' }}></textarea>\r\n                    <error className=\"error\">{formValue.error.address}</error>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div>\r\n                        <label className=\"label text\" htmlFor=\"city\">City</label>\r\n                        <input className=\"input\" type=\"text\" id=\"city\" name=\"city\" value={formValue.city} onChange={changeValue} />\r\n                        <error className=\"error\">{formValue.error.city}</error>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"label text\" htmlFor=\"state\">State</label>\r\n                        <input className=\"input\" type=\"text\" id=\"state\" name=\"state\" value={formValue.state} onChange={changeValue} />\r\n                        <error className=\"error\">{formValue.error.state}</error>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"label text\" htmlFor=\"zip\">Zip</label>\r\n                        <input className=\"input\" type=\"text\" id=\"zip\" name=\"zip\" value={formValue.zip} onChange={changeValue} />\r\n                        <error className=\"error\">{formValue.error.zip}</error>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"button-container\">\r\n                     <div className=\"button-row\">\r\n\r\n                        <div className=\"submit-reset\">\r\n                            <button type=\"submit\" className=\"button add-button\" id=\"button add-button\">{formValue.isUpdate ? 'Update' : 'Add'}</button>\r\n                            <button type=\"button\" onClick={reset} className=\"button reset-button\">Reset</button>\r\n                        </div>\r\n                        </div>\r\n                    </div >\r\n                </form >\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default withRouter(PersonForm); ","F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\services\\addressbook-service.js",[],"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\configuration\\configuration.js",[],["45","46"],"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\services\\axios-service.js",[],"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\components\\home\\home.jsx",[],"F:\\Capgemini_training1\\ReactJS\\addressbook\\src\\components\\display\\display.jsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":6,"column":21,"nodeType":"53","messageId":"54","endLine":6,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":36,"column":10,"nodeType":"57","endLine":36,"endColumn":12,"suggestions":"58"},{"ruleId":"47","replacedBy":"59"},{"ruleId":"49","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDataById' and 'params.id'. Either include them or remove the dependency array.","ArrayExpression",["63"],["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [getDataById, params.id]",{"range":"66","text":"67"},[958,960],"[getDataById, params.id]"]